CREATE TABLE `userinfo` (
  `index` int(11) NOT NULL AUTO_INCREMENT,
  `ID` char(16) NOT NULL,
  `PWD` char(16) NOT NULL,
  `PWDQ` int(11) NOT NULL,
  `PWDA` varchar(50) NOT NULL,
  `NAME` char(10) NOT NULL,
  `ZIP` char(6) NOT NULL,
  `ADD1` varchar(50) NOT NULL,
  `ADD2` varchar(50) NOT NULL,
  `TEL` int(10) unsigned zerofill DEFAULT NULL,
  `PHONE` int(11) NOT NULL,
  `EMAIL` varchar(45) NOT NULL,
  PRIMARY KEY (`index`),
  UNIQUE KEY `index_UNIQUE` (`index`),
  UNIQUE KEY `ID_UNIQUE` (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;

ALTER TABLE userinfo add authority varchar(10) not null;

CREATE TABLE PRODUCT_CATEGORY_TB(
	category_NO INT PRIMARY KEY,
    category_name VARCHAR(10) NOT NULL
);

CREATE TABLE PAYMENT_WAY_TB(
	way_NO INT PRIMARY KEY,
    way_name VARCHAR(10) NOT NULL
);

CREATE TABLE ORDER_STATE_TB(
	state_NO INT PRIMARY KEY,
    state_name VARCHAR(10) NOT NULL
);

CREATE TABLE PRODUCT_TB(
	product_ID INT PRIMARY KEY AUTO_INCREMENT,
    product_name VARCHAR(40) NOT NULL,
	product_subTitle VARCHAR(100) NOT NULL,
    product_price INT NOT NULL,
    product_discount INT NOT NULL,
    category INT NOT NULL,
    color VARCHAR(10) NOT NULL,
    size VARCHAR(10) NOT NULL,
    quantity INT NOT NULL,
    IMG_PATH VARCHAR(1000) NOT NULL,
    bPopularity BOOLEAN NOT NULL,
    reg_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    delivery_price INT NOT NULL,
    CONSTRAINT FK_PRODUCT_CATEGORY FOREIGN KEY (category) 
		REFERENCES PRODUCT_CATEGORY_TB(category_NO) ON DELETE CASCADE
);


CREATE TABLE REVIEW_TB(
	review_NO INT PRIMARY KEY AUTO_INCREMENT,
    writer CHAR(16) NOT NULL,
    product_ID INT NOT NULL,
    title VARCHAR(100) NOT NULL,
	review_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    views INT NOT NULL,
    contents VARCHAR(2000) NOT NULL,
    CONSTRAINT FK_REVIEW_MEMBER FOREIGN KEY(writer)
		REFERENCES userinfo(ID) ON DELETE CASCADE,
    CONSTRAINT FK_REVIEW_PRODUCT FOREIGN KEY (product_ID)
		REFERENCES PRODUCT_TB(product_ID) ON DELETE CASCADE
);

CREATE TABLE QNA_TB(
	qna_NO INT PRIMARY KEY AUTO_INCREMENT,
    writer CHAR(16) NOT NULL,
    title VARCHAR(100) NOT NULL,
    qna_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    contents VARCHAR(2000) NOT NULL,
    bPrivate BOOLEAN NOT NULL,
    CONSTRAINT FK_QNA_MEMBER FOREIGN KEY(writer)
		REFERENCES userinfo(ID) ON DELETE CASCADE
);

CREATE TABLE QNA_COMMENT_TB(
	comment_NO INT PRIMARY KEY AUTO_INCREMENT,
    qna_NO INT NOT NULL,
    contents VARCHAR(2000) NOT NULL,
    comment_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    bPrivate BOOLEAN NOT NULL,
    CONSTRAINT FK_COMMENT_QNA FOREIGN KEY(qna_NO)
		REFERENCES QNA_TB(qna_NO) ON DELETE CASCADE
);

CREATE TABLE NOTICE_TB(
	notice_NO INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    contents VARCHAR(2000) NOT NULL,
    notice_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    bHeadline BOOLEAN NOT NULL
);

CREATE TABLE EVENT_TB(
	event_NO INT PRIMARY KEY AUTO_INCREMENT,
    title VARCHAR(100) NOT NULL,
    contents VARCHAR(2000) NOT NULL,
    event_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    bHeadline BOOLEAN NOT NULL
);

CREATE TABLE ORDER_TB(
	order_NO INT PRIMARY KEY AUTO_INCREMENT,
    member_ID char(16),
    product_ID INT,
    order_quantity INT NOT NULL,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    payment_way INT NOT NULL,
    deposit_name VARCHAR(10),
    order_request VARCHAR(50),
    order_state INT NOT NULL,
    order_cellphone VARCHAR(30),
    CONSTRAINT FK_ORDER_MEMBER FOREIGN KEY(member_ID)
		REFERENCES userinfo(ID) ON DELETE RESTRICT,
	CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(product_ID)
		REFERENCES PRODUCT_TB(product_ID) ON DELETE RESTRICT,
	CONSTRAINT FK_ORDER_PAYMENT FOREIGN KEY(payment_way)
		REFERENCES PAYMENT_WAY_TB(way_NO) ON DELETE RESTRICT,
	CONSTRAINT FK_ORDER_STATE FOREIGN KEY(order_state)
		REFERENCES ORDER_STATE_TB(state_NO) ON DELETE RESTRICT
);

commit;